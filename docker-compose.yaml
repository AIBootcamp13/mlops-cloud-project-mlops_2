# version: '3.8'  # 제거 (더 이상 필요 없음)

x-airflow-common: &airflow-common
  image: apache/airflow:2.9.3
  environment:
    &airflow-common-env
    # AIRFLOW__CORE__EXECUTOR: LocalExecutor
    # AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
    AIRFLOW__CORE__REMOTE_LOGGING: 'false'  # S3 설정 완료 전까지 false
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__PARALLELISM: 4
    AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG: 2
    AIRFLOW__CORE__EXECUTOR: SequentialExecutor  
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db

  volumes:
    - ./dags:/opt/airflow/dags 
    - ./logs:/opt/airflow/logs
    - /var/run/docker.sock:/var/run/docker.sock
    - airflow-db:/opt/airflow
  user: "${AIRFLOW_UID:-50000}:0"

services:
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/logs /opt/airflow/dags
        airflow db init
        airflow users create \
          --username airflow \
          --firstname airflow \
          --lastname airflow \
          --role Admin \
          --email airflow@example.com \
          --password airflow  
    environment:
      <<: *airflow-common-env
# login : airflow/airflow
volumes:
  airflow-db:

